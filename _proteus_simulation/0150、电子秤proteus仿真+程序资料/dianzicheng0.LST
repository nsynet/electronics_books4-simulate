C51 COMPILER V8.02   DIANZICHENG0                                                          03/05/2009 23:02:55 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE DIANZICHENG0
OBJECT MODULE PLACED IN dianzicheng0.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE dianzicheng0.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /********************************************************
   2                             压力测试仪
   3          系统描述;输入  15--115kPA压力信号
   4                   输出  00h--ffh数字信号（adc0832）
   5                   在LCD上显示实际的压力值，如果超限则报警
   6          
   7          线性区间标度变换公式：    y=(115-15)/(243-13)*X+15kpa   
   8          
   9          作者：
  10          单位：
  11          日期：2008.3.7
  12          
  13          ********************************************************/
  14          
  15          #include<reg51.h>
  16          #include<intrins.h>
  17          #include <absacc.h>
  18          #include <math.h>
  19          
  20          #define uchar unsigned char
  21          #define uint   unsigned int
  22          #define BUSY  0x80                               //常量定义
  23          #define DATAPORT P0
  24          
  25          
  26          //ADC0832的引脚
  27          sbit ADCS =P3^5;  //ADC0832 chip seclect
  28          sbit ADDI =P3^7;  //ADC0832 k in
  29          sbit ADDO =P3^7;  //ADC0832 k out
  30          sbit ADCLK =P3^6;  //ADC0832 clock signal
  31          
  32          sbit LCM_RS=P2^0;
  33          sbit LCM_RW=P2^1;
  34          sbit LCM_EN=P2^2;
  35          
  36          uchar ad_data;                                    //采样值存储
  37          sbit Alarm_led_red =P3^1;                         //超过压力表量程最大值红色led报警定义
  38          sbit Alarm_led_green=P3^2;                        //低于压力表量程最小值绿色led报警定义
  39                                    //adc采样值存储单元
  40          char press_data;                                  //标度变换存储单元
  41          unsigned char ad_alarm;                           //报警值存储单元
  42          unsigned char press_ge=0;                        //显示值百位
  43          unsigned char press_shifen=0;                        //显示值十位
  44          unsigned char press_baifen=0;                         //显示值个位
  45          unsigned char press_qianfen=0;                        //显示值十分位
  46          
  47          uchar code str0[]={"Weight:  .   Kg "};
  48          uchar code str1[]={"Make by GUO TAO "};
  49          uchar code str2[]={"Price:          "};
  50          uchar code str3[]={"Total:          "};
  51          void delay(uint);
  52          void lcd_wait(void);
  53          void delay_LCM(uint);                                                                                                   //LCD延时子程序
  54          void initLCM( void);                                                                                                    //LCD初始化子程序
  55          void lcd_wait(void);                                                                                                    //LCD检测忙子程序
C51 COMPILER V8.02   DIANZICHENG0                                                          03/05/2009 23:02:55 PAGE 2   

  56          void WriteCommandLCM(uchar WCLCM,uchar BusyC);                              //写指令到ICM子函数
  57          void WriteDataLCM(uchar WDLCM);                                             //写数据到LCM子函数
  58          void DisplayOneChar(uchar X,uchar Y,uchar DData);                           //显示指定坐标的一个字符子函数
  59          void DisplayListChar(uchar X,uchar Y,uchar code *DData);                                         //显示指定坐标的一串字符子函数
  60            void keyscan();                   
  61          void display(void);                                                         //系统显示子函数
  62          uchar Adc0832(unsigned char channel);                                                                                                                   
  63          void alarm(void);
  64          void data_pro(void);
  65          
  66          
  67          /**********main funcation************/
  68          
  69          void main(void)
  70          { 
  71   1          delay(500);                      //系统延时500ms启动
  72   1      //      ad_data=0;                       //采样值存储单元初始化为0
  73   1              initLCM( );
  74   1              
  75   1              WriteCommandLCM(0x01,1);                    //清显示屏
  76   1          DisplayListChar(0,0,str0);
  77   1              DisplayListChar(0,1,str2);
  78   1       
  79   1              while(1)
  80   1          {
  81   2                 ad_data =Adc0832(0);    //采样值存储单元初始化为0
  82   2                 
  83   2                  alarm();
  84   2              
  85   2                      data_pro();
  86   2                      
  87   2                      display();
  88   2                                       
  89   2              }
  90   1      }
  91          
  92          
  93          /*********延时K*1ms,12.000mhz**********/
  94          
  95          void delay(uint k)
  96          {
  97   1          uint i,j;
  98   1          for(i=0;i<k;i++)
  99   1          {
 100   2              for(j=0;j<60;j++)
 101   2                      {;}
 102   2          }
 103   1      }   
 104          /**********写指令到ICM子函数************/
 105          
 106          void WriteCommandLCM(uchar WCLCM,uchar BusyC)
 107          {
 108   1          if(BusyC)lcd_wait();
 109   1              DATAPORT=WCLCM;
 110   1          LCM_RS=0;                   // 选中指令寄存器
 111   1          LCM_RW=0;                   // 写模式       
 112   1          LCM_EN=1;    
 113   1              _nop_();   
 114   1              _nop_();
 115   1              _nop_(); 
 116   1          LCM_EN=0;
 117   1         
C51 COMPILER V8.02   DIANZICHENG0                                                          03/05/2009 23:02:55 PAGE 3   

 118   1      }
 119          
 120          /**********写数据到LCM子函数************/
 121          
 122          void WriteDataLCM(uchar WDLCM)
 123          { 
 124   1          lcd_wait( );             //检测忙信号    
 125   1              DATAPORT=WDLCM;
 126   1          LCM_RS=1;                // 选中数据寄存器
 127   1          LCM_RW=0;                    // 写模式
 128   1          LCM_EN=1;
 129   1          _nop_();
 130   1              _nop_();
 131   1              _nop_();
 132   1          LCM_EN=0;
 133   1      }
 134          
 135          /***********lcm内部等待函数*************/
 136          
 137          void lcd_wait(void)
 138          {
 139   1          DATAPORT=0xff;           //读LCD前若单片机输出低电平,而读出LCD为高电平,则冲突,Proteus仿真会有显示逻辑黄色
 140   1              LCM_EN=1;
 141   1          LCM_RS=0;   
 142   1          LCM_RW=1;   
 143   1          _nop_();
 144   1          _nop_();
 145   1              _nop_();
 146   1          while(DATAPORT&BUSY)  
 147   1              {  LCM_EN=0;
 148   2                 _nop_();
 149   2                 _nop_();
 150   2                 LCM_EN=1;
 151   2                 _nop_();
 152   2                 _nop_();
 153   2                 }     
 154   1              LCM_EN=0;       
 155   1              
 156   1      }
 157          
 158          /**********LCM初始化子函数***********/
 159          
 160          void initLCM( )
 161          {   
 162   1              DATAPORT=0;     
 163   1              delay(15);
 164   1              WriteCommandLCM(0x38,0);    //三次显示模式设置，不检测忙信号
 165   1          delay(5); 
 166   1          WriteCommandLCM(0x38,0);
 167   1          delay(5); 
 168   1          WriteCommandLCM(0x38,0);
 169   1          delay(5); 
 170   1      
 171   1          WriteCommandLCM(0x38,1);    //8bit数据传送，2行显示，5*7字型，检测忙信号
 172   1          WriteCommandLCM(0x08,1);    //关闭显示，检测忙信号
 173   1          WriteCommandLCM(0x01,1);    //清屏，检测忙信号
 174   1          WriteCommandLCM(0x06,1);    //显示光标右移设置，检测忙信号
 175   1          WriteCommandLCM(0x0c,1);    //显示屏打开，光标不显示，不闪烁，检测忙信号
 176   1      }
 177          
 178          /****显示指定坐标的一个字符子函数****/
 179          
C51 COMPILER V8.02   DIANZICHENG0                                                          03/05/2009 23:02:55 PAGE 4   

 180          void DisplayOneChar(uchar X,uchar Y,uchar DData)
 181          
 182          {
 183   1         Y&=0x01;
 184   1          X&=0x0f;
 185   1          if(Y)X|=0x40;               //若y为1（显示第二行），地址码+0X40
 186   1          X|=0x80;                    //指令码为地址码+0X80
 187   1          WriteCommandLCM(X,1);
 188   1          WriteDataLCM(DData);
 189   1      }
 190          
 191          /*******显示指定坐标的一串字符子函数*****/
 192           
 193          void DisplayListChar(uchar X,uchar Y,uchar code *DData)
 194          {
 195   1          uchar ListLength=0;
 196   1          Y&=0x01;
 197   1          X&=0x0f;
 198   1          while(X<16)
 199   1          {
 200   2              DisplayOneChar(X,Y,DData[ListLength]);
 201   2              ListLength++;
 202   2              X++;
 203   2          }
 204   1      }
 205          
 206           /*****************系统显示子函数*****************/
 207          
 208          void display(void)
 209          {
 210   1              WriteCommandLCM(0x0c,1);                                //显示屏打开，光标不显示，不闪烁，检测忙信号    
 211   1              DisplayListChar(0,0,str0);      
 212   1              DisplayListChar(0,1,str2);      
 213   1      
 214   1      
 215   1              DisplayOneChar(8,0,press_ge+0x30);
 216   1              DisplayOneChar(10,0,press_shifen+0x30);
 217   1              DisplayOneChar(11,0,press_baifen+0x30);
 218   1          DisplayOneChar(12,0,press_qianfen+0x30);
 219   1              delay(1000);                               //稳定显示
 220   1      }
 221          /************
 222          读ADC0832函数
 223          ************/
 224          
 225          //采集并返回
 226          uchar Adc0832(unsigned char channel)     //AD转换，返回结果
 227          {
 228   1          uchar i=0;
 229   1          uchar j;
 230   1          uint dat=0;
 231   1          uchar ndat=0;
 232   1      
 233   1          if(channel==0)channel=2;
 234   1          if(channel==1)channel=3;
 235   1          ADDI=1;
 236   1          _nop_();
 237   1          _nop_();
 238   1          ADCS=0;//拉低CS端
 239   1          _nop_();
 240   1          _nop_();
 241   1          ADCLK=1;//拉高CLK端
C51 COMPILER V8.02   DIANZICHENG0                                                          03/05/2009 23:02:55 PAGE 5   

 242   1          _nop_();
 243   1          _nop_();
 244   1          ADCLK=0;//拉低CLK端,形成下降沿1
 245   1          _nop_();
 246   1          _nop_();
 247   1          ADCLK=1;//拉高CLK端
 248   1          ADDI=channel&0x1;
 249   1          _nop_();
 250   1          _nop_();
 251   1          ADCLK=0;//拉低CLK端,形成下降沿2
 252   1          _nop_();
 253   1          _nop_();
 254   1          ADCLK=1;//拉高CLK端
 255   1          ADDI=(channel>>1)&0x1;
 256   1          _nop_();
 257   1          _nop_();
 258   1          ADCLK=0;//拉低CLK端,形成下降沿3
 259   1          ADDI=1;//控制命令结束 
 260   1          _nop_();
 261   1          _nop_();
 262   1          dat=0;
 263   1          for(i=0;i<8;i++)
 264   1          {
 265   2              dat|=ADDO;//收数据
 266   2              ADCLK=1;
 267   2              _nop_();
 268   2              _nop_();
 269   2              ADCLK=0;//形成一次时钟脉冲
 270   2              _nop_();
 271   2              _nop_();
 272   2              dat<<=1;
 273   2              if(i==7)dat|=ADDO;
 274   2          }  
 275   1          for(i=0;i<8;i++)
 276   1          {
 277   2              j=0;
 278   2              j=j|ADDO;//收数据
 279   2              ADCLK=1;
 280   2              _nop_();
 281   2              _nop_();
 282   2              ADCLK=0;//形成一次时钟脉冲
 283   2              _nop_();
 284   2              _nop_();
 285   2              j=j<<7;
 286   2              ndat=ndat|j;
 287   2              if(i<7)ndat>>=1;
 288   2          }
 289   1          ADCS=1;//拉低CS端
 290   1          ADCLK=0;//拉低CLK端
 291   1          ADDO=1;//拉高数据端,回到初始状态
 292   1          dat<<=8;
 293   1          dat|=ndat;
 294   1          return(dat);            //return ad k
 295   1      }
 296          
 297          
 298          void data_pro(void)
 299          {
 300   1            unsigned int temp;
 301   1            float  press;                       
 302   1      
 303   1                if(14<ad_data<243)                                   //当压力值介于15kpa到115kpa之间时，遵循线性变换
C51 COMPILER V8.02   DIANZICHENG0                                                          03/05/2009 23:02:55 PAGE 6   

 304   1                      {                           
 305   2                          int vary=ad_data;                                           //y=(115-15)/(243-13)*X+15kpa                   
 306   2                              press=((10.0/23.0)*vary)+9.3;                   //测试时补偿值为9.3
 307   2                                                                                                                        
 308   2                              temp=(int)(press*10);                   //放大10倍，便于后面的计算
 309   2                                                                                              
 310   2                                                                                                              
 311   2                              press_ge=temp/1000;                             //取压力值百位
 312   2                              press_shifen=(temp%1000)/100;                   //取压力值十位
 313   2                              press_baifen=((temp%1000)%100)/10;              //取压力值个位
 314   2                              press_qianfen=((temp%1000)%100)%10;                     //取压力值十分位
 315   2      
 316   2                         }        
 317   1                               
 318   1      }
 319          /*****************报警子函数*******************/
 320          
 321          void alarm(void)
 322          {
 323   1               if(ad_data>=243)                           //如果当前压力值大于115kpa，
 324   1      
 325   1                {  Alarm_led_red=0; }                 //则启动red led报警
 326   1              
 327   1                else
 328   1                   {    Alarm_led_red=1; }                    //关闭red led 报警
 329   1                         
 330   1              
 331   1                if(ad_data<=14)                                                       //如果当前压力值小于16kpa
 332   1      
 333   1                   {  Alarm_led_green=0;  }               //则启动green led报警
 334   1      
 335   1            else
 336   1                   {   Alarm_led_green=1; }                           //关闭green  led 报警
 337   1               
 338   1      }
 339          
 340          
 341          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    757    ----
   CONSTANT SIZE    =     68    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
