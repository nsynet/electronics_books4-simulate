//-----------------------------------------------------------------
//  名称:用T6963C液晶与DS1302设计的指针式电子钟
//-----------------------------------------------------------------
//  说明: 利用像素可寻址LCD设计了指针式电子钟,电子钟由表盘、
//		 时针、分针、秒针等构成.用K1～K5可实现相关调节功能.
//        注意1：如果要在源程序中直接使用中文字符串，则必须将源程序文件由
//        “Chinese Simplified-GB2312”编码格式转换为“Unicode(UTF-8)”
//        编码格式，然后再重新编译. 如果源程序中直接提供了中文字符串的
//        “Unicode或UTF-8”编码，则可以直接编译。
//        注意2：编译本例时还要将U8g2库文件夹复制到Arduino库文件夹libraries下.
//
//-----------------------------------------------------------------
#include <Arduino.h>
#include <U8g2lib.h>				//U8g2库
#include "DS1302RTC.h"				//DS1302RTC库
#include "TimeLib.h"				//Timelib库
#include "MyU8g2fonts.c"			//自定义字模文件
//创建RTC对象，6, 5, 4分别对应：IO, SCLK, RST引脚
DS1302RTC RTC(6, 5, 4);
//按键定义:中断触发，选择，加，减，确定，取消
const uint8_t KeyPins[6] = {2,0,1,3,18,19};
//-----------------------------------------------------------------
// 定义T6963C液晶实例  // Connect RD with +5V, FS0 and FS1 with GND
U8G2_T6963_240X128_1_8080 u8g2(U8G2_R0, 8, 9, 10, 11, 4, 5, 6, 7, 17,14,15,16);
uint8_t PreKey = 0xFF;				//此前按键
uint8_t tCount = 0, d_Flag = 0;		//计数变量，标识变量
int DateTime[7];					//所读取的日期时间
int Adjust_Index = -1;				//当前调节的时间日期对象
//一年中每个月的天数,2月的天数是否再加1由年份决定
const int M_Days[] = {0,31,28,31,30,31,30,31,31,30,31,30,31};
//星期对应的汉字表
const char *WEEKs[] = {"日","一","二","三","四","五","六"};
//const char *WEEKs[] = //以下为直接编码模式
//{"\u65e5","\u4e00","\u4e8c","\u4e09","\u56db","\u4e94","\u516d"};
tmElements_t tm;		//定义日期时间结构类型变量tm，类型定义于timelib.h
tmElements_t tmBack;	//用于保存之前的日期时间信息
//-----------------------------------------------------------------
// 绘制电子钟圆形面板
//-----------------------------------------------------------------
void Clock_Plate() {

}
//-----------------------------------------------------------------
// 重绘HMS中的某一指针(Curr:当前时间项值，Old此前时间项值，最大值，指针长度）
//-----------------------------------------------------------------
void RepaintPointer(float Curr,float Old, float m,float ClockPtrLen) {

}
//-----------------------------------------------------------------
// 时间变化时重绘
//-----------------------------------------------------------------
void Display_HMS_Hand() {

}
//-----------------------------------------------------------------
// 初始配置
//-----------------------------------------------------------------
void setup() {

}
//-----------------------------------------------------------------
// 主循环
//-----------------------------------------------------------------
void loop() {


}
//-----------------------------------------------------------------
// 按键中断处理函数
//-----------------------------------------------------------------
void ISR_KeyHandler() {

}
//-----------------------------------------------------------------
// 年月日时分秒递增/减调节(星期自动计算,不允许直接调节)
//-----------------------------------------------------------------
void DateTime_Adjust(int x) {


}
//-----------------------------------------------------------------
// 闰年判断 注：Timelib提供了LEAP_YEAR(Y)宏定义，isLeapYear可用其替换
//-----------------------------------------------------------------
uint8_t isLeapYear(uint16_t y) {

}
//-----------------------------------------------------------------
// 求自2000.1.1开始的任何一天是星期几（更新tm.Day）
// 函数没有通过求出总天数后再求星期几,因为求总天数可能会越出int的范围
// 注：TimeLib提供了返回星期的函数，
// 调用tm.Wday = weekday(makeTime(tm))) 时可忽略本函数代码
//-----------------------------------------------------------------
void RefreshWeekDay() {


}