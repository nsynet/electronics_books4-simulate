//-----------------------------------------------------------------
//  名称: 简易加密电子密码锁
//-----------------------------------------------------------------
//  说明: 电子锁初始密码为123456,EEPROM中同时保存了密码明文与密文.
//        数字键0-9用于输入密码,密码不超过10位,输入完成后按下
//        "开锁键"开锁,密码正确时LED点亮,液晶屏显示开锁成功.
//        另外,本例还具备:上锁,重新输入密码,保存新密码,清除等功能.
//        重设密码时要求先输入正确的密码并成功开锁.
//
//-----------------------------------------------------------------
#include <LiquidCrystal.h>						//液晶库
//创建液晶对象，0~2对应：RS,RW,E引脚,4~7对应D4~D7引脚
LiquidCrystal lcd(0, 1, 2, 4, 5, 6, 7);
//-----------------------------------------------------------------
#include <EEPROM.h>
//- Arduno Duemilanove:	512b EEPROM
//- Arduino Uno:		1kb EEPROM
//- Arduino Mega:		4kb EEPROM
//- Teensy 3.0 & 3.1:	2kb EEPROM
//- Teensy-LC:			128b EEPROM
//- Teensy 2.0:			1kb EEPROM
//- Teensy++ 2.0:		4kb EEPROM
const char *Title_Text = "Your Password...";//提示字符串
char DSY_BUFFER[10] = "";				//显示缓冲
char EEPROM_Password[11];				//EEPROM密码明文
char Custom_Encrypt_Pass[11];			//EEPROM密码密文(仅用于调试
char UserInputPassword[11];				//用户输入的密码(密码不超过10位)
uint8_t i = 0;							//液晶显示缓冲索引
#define BEEP		3					//蜂鸣器引脚
#define RELAY_CTRL	12					//继电器控制引脚
#define RELAY_ON()  digitalWrite(RELAY_CTRL,LOW)	//继电器闭合
#define RELAY_OFF() digitalWrite(RELAY_CTRL,HIGH)	//继电器断开
//-----------------------------------------------------------------
#include <Keypad.h>
//定义4×4键盘行线与列线引脚
uint8_t rowPins[4] = {17, 16, 15, 14}; //四条行线定义
uint8_t colPins[4] = {11, 10,  9,  8}; //四条列线定义
//定义4×4键盘各键位对应的字符
char KeyCharsList[4][4] = {
	{'0','1','2','3'},
	{'4','5','6','7'},
	{'8','9','A','B'},
	{'C','D','E','F'}
};
//初始化Keypad类实例
Keypad kpd = Keypad(makeKeymap(KeyCharsList),rowPins,colPins,4,4);
uint8_t IS_Valid_User = 0;
//-----------------------------------------------------------------
// 初始配置
//-----------------------------------------------------------------
void setup() {

}
//-----------------------------------------------------------------
// 主循环
//-----------------------------------------------------------------
void loop() {

}
//-----------------------------------------------------------------
// 清除密码
//-----------------------------------------------------------------
void Clear_Password(){	}
//-----------------------------------------------------------------
// 液晶显示(在指定行，指定列显示指定字符串)
//-----------------------------------------------------------------
void LCD_ShowString(uint8_t r, uint8_t c, char *s) {

}
//-----------------------------------------------------------------
// 读取EEPROM中的密码密文(以'\0'或0xFF为结果标志)
//-----------------------------------------------------------------
void Read_EEPROM_Password() {

}
//-----------------------------------------------------------------
// 自定义简易密码加密算法
//-----------------------------------------------------------------
void Encrypt_Password(char *s) {

}
//-----------------------------------------------------------------
// 将新密码保存到EEPROM,为便于读者调试观察,
// 本函数同时保存了新密码的密文和明文,保存位置分别为:0x00,0x10)
//-----------------------------------------------------------------
void Save_Password_TO_EEPROM() {

}