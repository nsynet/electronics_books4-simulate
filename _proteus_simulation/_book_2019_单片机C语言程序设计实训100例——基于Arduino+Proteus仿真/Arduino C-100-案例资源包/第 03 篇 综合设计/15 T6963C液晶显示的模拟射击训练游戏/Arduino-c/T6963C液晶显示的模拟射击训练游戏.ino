//-----------------------------------------------------------------
//  名称:射击训练游戏
//-----------------------------------------------------------------
//  说明: 运行时液晶显示封面,游戏区,默认弹药20发.K1,K2键用于上/下移动
//		枪支,跟踪目标,K3用于发射并输出枪声,每次发射时如果击中则加1分, 
//		击中后如果目标物体尚未移动,程序不重复加分. 弹药用完后按K4重新开始.
//		
//-----------------------------------------------------------------
#include <Arduino.h>
#include <U8g2lib.h>						//U8g2lib驱动库
#include "MyU8g2fonts.c"					//自定义字模文件
#include "picture.h"						//相关封面及图标等点阵数据
//按键定义
#define K1		0						//上移
#define K2		1						//下移
#define K3		3						//发射
#define K4		18						//重新开始
#define BEEP		19						//蜂鸣器
#define K1_ON()  (digitalRead(K1) == 0)	//上移键按下
#define K2_ON()  (digitalRead(K2) == 0) 	//下移键按下
#define K3_ON()  (digitalRead(K3) == 0) 	//发射键按下
#define K4_ON()  (digitalRead(K4) == 0) 	//重新开始键按下
//-----------------------------------------------------------------
// 定义T6963C液晶实例  //Connect RD with +5V, FS0 and FS1 with GND
//-----------------------------------------------------------------
U8G2_T6963_240X128_1_8080 u8g2(U8G2_R0, 8,9,10,11,4,5,6,7,17,14,15,16); 
volatile uint8_t Score = 0, Bullet_Count = 20;	//得分,剩余弹药数
volatile uint8_t Target_x = 0, Target_y = 0;		//目标物体当前位置
volatile uint8_t Target_x0 = 8, Target_y0 = 24;	//目标物体原始位置
volatile uint8_t Pre_Target_y = 0;				//目标物体上次所在纵坐标位置
volatile uint8_t gun_y = 20;						//枪支纵坐标(横坐标固定不变)
volatile uint8_t drawTrajectory = 0;				//弹道轨迹绘制控制标识
volatile uint8_t changeTargetPos = 0;				//目标物体位置变化标识
volatile long m ;								//延时控制辅助变量
//-----------------------------------------------------------------
// 初始配置
//-----------------------------------------------------------------
void setup() {

}
//-----------------------------------------------------------------
// 主循环
//-----------------------------------------------------------------
void loop() {

}
//-----------------------------------------------------------------
// 绘制移动目标
//-----------------------------------------------------------------
void drawTarget() {

}
//-----------------------------------------------------------------
// 显示成绩与剩余弹药
//-----------------------------------------------------------------
void Show_Score_and_Bullet() {

}
//-----------------------------------------------------------------
// 键盘处理函数
//-----------------------------------------------------------------
void INT0_ISR() {


}