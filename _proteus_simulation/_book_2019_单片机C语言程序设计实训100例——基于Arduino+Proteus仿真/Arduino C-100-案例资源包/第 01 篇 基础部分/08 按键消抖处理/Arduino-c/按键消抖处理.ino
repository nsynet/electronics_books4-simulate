//-----------------------------------------------------------------
//  名称: 按键消抖处理
//-----------------------------------------------------------------
//  说明: 本例用4个按键分别控制4只LED，按下时点亮对应LED，再次按下时
//        熄灭对应LED。按键消抖使用了两种方法，分别为：计时法、延时法。
//
//-----------------------------------------------------------------
const uint8_t KCNT = 4;						//按键个数
const uint8_t pinKey[] = {14, 15, 16, 17};	//4只按键输入引脚
const uint8_t pinLed[] = {0, 1, 2, 3};		//4只LED输出引脚
uint8_t buttonSteadyState = 0xFF;			//上次最后的稳定按键状态
uint8_t buttonTempState = 0xFF;				//按键临时状态(含抖动)
uint8_t OperState = 0x00;					//各键对应的操作状态
long lastDebounceTime[KCNT] = {0,0,0,0};	//状态变化以来的计时值
long debounceDelay = 10;					//消抖时间10ms
//-----------------------------------------------------------------
// 初始配置
//-----------------------------------------------------------------
void setup() {
	for (uint8_t i = 0; i < KCNT; i++) {	//配置按键与LED引脚

	}
}
//-----------------------------------------------------------------
// 主循环
//-----------------------------------------------------------------
void loop() {

}
//-----------------------------------------------------------------
// 扫描按键(方法1:计时法)
//-----------------------------------------------------------------
void ScanKeys1() {
	for (uint8_t i = 0; i < KCNT; i++) {		//扫描KCNT个按键

	}
}
//-----------------------------------------------------------------
// 扫描按键(方法2:延时法)[仅处理按下操作]
//-----------------------------------------------------------------
void ScanKeys2() {
	for (uint8_t i = 0; i < KCNT; i++) {		//扫描KCNT个按键

	}
}