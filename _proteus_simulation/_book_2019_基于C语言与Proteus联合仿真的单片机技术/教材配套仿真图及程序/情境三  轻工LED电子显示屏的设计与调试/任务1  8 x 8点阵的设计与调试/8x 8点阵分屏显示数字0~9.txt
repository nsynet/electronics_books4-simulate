//8*8 LED点阵分屏显示数字0~9
//分屏显示数字0~9，可以利用通过二维数组把0~9的数据码存放起来。每显示完一个数字延时0.5s，即可让点阵每隔0.5s依次显示0~9，实现分屏显示的效果。具体程序如下：
------------------------------------------------------------------------------------------
#include<reg51.h>
#define hang P2                         //定义P2口接行显示信号
#define lie P3                          //定义P3口接列扫描信号
int repeat=30;                          //扫描30周，约2ms×8×30=0.48s
delay(int);                             //定义延时函数
char code saomiao[ ]={0xfe,0xfd,0xfb,0xf7,0xef,0xdf,0xbf,0x7f};  //定义列扫描信号
char code seg[ ][8]=                 	// 字型 
{	{0x00, 0x1c, 0x22, 0x41, 0x41, 0x22, 0x1c, 0x00},	// 0
 	{0x00, 0x40, 0x44, 0x7e, 0x7f, 0x40, 0x40, 0x00},	// 1
 	{0x00, 0x00, 0x66, 0x51, 0x49, 0x46, 0x00, 0x00},	// 2
 	{0x00, 0x00, 0x22, 0x41, 0x49, 0x36, 0x00, 0x00},	// 3
 	{0x00, 0x10, 0x1c, 0x13, 0x7c, 0x7c, 0x10, 0x00},	// 4
 	{0x00, 0x00, 0x27, 0x45, 0x45, 0x45, 0x39, 0x00},	// 5
 	{0x00, 0x00, 0x3e, 0x49, 0x49, 0x32, 0x00, 0x00},	// 6
 	{0x00, 0x03, 0x01, 0x71, 0x79, 0x07, 0x03, 0x00},	// 7
 	{0x00, 0x00, 0x36, 0x49, 0x49, 0x36, 0x00, 0x00},	// 8
 	{0x00, 0x00, 0x26, 0x49, 0x49, 0x3e, 0x00, 0x00}};	// 9
// ============ 主程序 ================================================================
main()                               //主程序初始化
{
int i;                              //定义整形变量 i
int k;                              //定义整形变量 k
int j;                              //定义整形变量 j
while(1)                         //无限循环
	{  for(k=0;k<repeat;k++)     //每一个数字的停留时间约0.5s
	   {  for(i=0;i<8;i++)        //扫描8次
		  { lie=saomiao[i];      //列扫描信号进行扫描
			hang=seg[0][i];    //改变前面中括号那个数字，则点阵也相应改变。
			delay(2);         //调用2毫秒延时
			hang=0x00;       //行数据清零
			}
		}
	j++;                      //显示数字加1
if(j==10)j=0;                         //判断是否扫描结束
}
}
//================延时函数=============================================================
delay(int x)
{  int i,j;
	for(i=0;i<x;i++)
	for(j=0;j<120;j++);
}