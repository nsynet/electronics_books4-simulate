C51 COMPILER V7.08   SYSTEM_ALARM                                                          04/04/2007 16:55:38 PAGE 1   


C51 COMPILER V7.08, COMPILATION OF MODULE SYSTEM_ALARM
OBJECT MODULE PLACED IN system_alarm.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE system_alarm.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*******************************************************************
   2                                    智能温控器
   3          
   4          问题描述：当温控开关打开时，若测得环境温度大于设定温度，则继电器吸合
   5                            ，启动压缩机工作；若测得环境温度小于设定温度，则继电器释放，
   6                            压缩机停止工作。
   7                    该实验可以应用于对温度控制精度要求不是很高的场合，例如，粮仓，
   8                            电冰箱，空调，电饭锅等。如果配以通讯接口，可以做成多点温度检
   9                    测监控系统。具有极强的扩展性。
  10          
  11          作者：    yiwei  "shannxi university of technolog " 
  12          日期：    2007.4.1在proteus上仿真成功；
  13                    2007.4.3电路板焊接调试成功
  14          
  15          参考资料：[1] 周兴华 编著 《单片机智能产品c语言设计实例祥解》
  16                    [2]《电子制作》 2006.11
  17                    [3] www.proteus.com
  18          
  19          注意： 此文档为仿真程序，若要在试验板上验证，需要须改一下函数
  20                  
  21          
  22          void lcd_wait(void)
  23          {
  24              DATAPORT=0xff;           
  25                  LCM_EN=1;
  26              LCM_RS=0;                           
  27              LCM_RW=1;                           
  28              _nop_();
  29              while(DATAPORT&BUSY)；
  30                  LCM_EN=0;
  31                  
  32          }
  33          
  34          *******************************************************************/
  35          
  36          #include<reg51.h>
  37          #include<intrins.h>
  38          #include <absacc.h>
  39          #define uchar unsigned char
  40          #define uint   unsigned int
  41          
  42          #define BUSY  0x80                               //lcd忙检测标志
  43          #define DATAPORT P0                              //定义P0口为LCD通讯端口
  44          #define PLAYE_ADDR XBYTE[0XBFFF]                 //语音报警地址
  45          
  46          sbit RED_ALARM=P1^0;                                             //红色指示灯
  47          sbit WRITE_ALARM=P1^1;                                          //白色指示灯
  48          sbit GREEN_ALARM=P1^2;                                          //绿色指示灯
  49          sbit P1_4=P1^4;                                             //时钟调整
  50          sbit P1_5=P1^5;                                                 //时钟加
  51          sbit P1_6=P1^6;                                                 //时钟减
  52          
  53          sbit DQ = P1^7;                                                 //定义ds18b20通信端口 
  54          sbit LCM_RS=P2^0;                                                               //数据/命令端
  55          sbit LCM_RW=P2^1;                                                               //读/写选择端
C51 COMPILER V7.08   SYSTEM_ALARM                                                          04/04/2007 16:55:38 PAGE 2   

  56          sbit LCM_EN=P2^2;                                               //LCD使能信号
  57          sbit ad_busy=P3^2;                                              //adc中断方式接口
  58          sbit RECLED_EOC=P3^5;                                           //ISD1420放音结束查询标志
  59          sbit OUT=P3^7;
  60          
  61          uchar ad_data;                                                  //ad采样值存储                                          
  62          uchar seconde=0;                                                //定义并初始化时钟变量
  63          uchar minite=0;
  64          uchar hour=12;
  65          uchar mstcnt=0;
  66          uchar temp1,temp2,temp;                                     //温度显示变量
  67          uchar t,set;
  68          uchar K;
  69          bit ON_OFF=0;
  70          bit outflag;
  71          
  72          uchar code str0[]={"---  :  :  ---  "};
  73          uchar code str1[]={"SET:  C SA:  . C"};
  74          
  75          void delay_LCM(uint);                                                                                                   //LCD延时子程序
  76          void initLCM( void);                                                                                                    //LCD初始化子程序
  77          void lcd_wait(void);                                                                                                    //LCD检测忙子程序
  78          void WriteCommandLCM(uchar WCLCM,uchar BusyC);                              //写指令到ICM子函数
  79          void WriteDataLCM(uchar WDLCM);                                             //写数据到LCM子函数
  80          void DisplayOneChar(uchar X,uchar Y,uchar DData);                           //显示指定坐标的一个字符子函数
  81          void DisplayListChar(uchar X,uchar Y,uchar code *DData);                    //显示指定坐标的一串字符子函数
  82          void init_timer0(void);                                                                                         //定时器初始化
  83          void displayfun1(void);
  84          void displayfun2(void);
  85          void displayfun3(void);
  86          void displayfun4(void);
  87          void keyscan(void );                                                                                        //键盘扫描子程序
  88          void set_adj(void);
  89          void inc_key(void);
  90          void dec_key(void);
  91          void delay_18B20(unsigned int i);
  92          void Init_DS18B20(void) ;
  93          uchar ReadOneChar(void);
  94          void WriteOneChar(unsigned char dat);
  95          void ReadTemperature(void);
  96          void ad0809(void);
  97          void playalarm(void); 
  98          
  99          
 100          /*********延时K*1ms,12.000mhz**********/
 101          
 102          void delay_LCM(uint k)
 103          {
 104   1          uint i,j;
 105   1          for(i=0;i<k;i++)
 106   1          {
 107   2              for(j=0;j<60;j++)
 108   2                      {;}
 109   2          }
 110   1      }   
 111          /**********写指令到ICM子函数************/
 112          
 113          void WriteCommandLCM(uchar WCLCM,uchar BusyC)
 114          {
 115   1          if(BusyC)lcd_wait();
 116   1              DATAPORT=WCLCM;
 117   1          LCM_RS=0;                   // 选中指令寄存器
C51 COMPILER V7.08   SYSTEM_ALARM                                                          04/04/2007 16:55:38 PAGE 3   

 118   1          LCM_RW=0;                   // 写模式       
 119   1          LCM_EN=1;    
 120   1              _nop_();   
 121   1              _nop_();
 122   1              _nop_(); 
 123   1          LCM_EN=0;  
 124   1      }
 125          
 126          /**********写数据到LCM子函数************/
 127          
 128          void WriteDataLCM(uchar WDLCM)
 129          { 
 130   1          lcd_wait( );            //检测忙信号    
 131   1              DATAPORT=WDLCM;
 132   1          LCM_RS=1;               // 选中数据寄存器
 133   1          LCM_RW=0;                   // 写模式
 134   1          LCM_EN=1;
 135   1          _nop_();
 136   1              _nop_();
 137   1              _nop_();
 138   1          LCM_EN=0;
 139   1      }
 140          
 141          /***********lcm内部等待函数*************/
 142          
 143          void lcd_wait(void)
 144          {
 145   1          DATAPORT=0xff;           
 146   1              LCM_EN=1;
 147   1          LCM_RS=0;                           
 148   1          LCM_RW=1;                           
 149   1          _nop_();
 150   1          while(DATAPORT&BUSY)
 151   1              {  LCM_EN=0;
 152   2                 _nop_();
 153   2                 _nop_();
 154   2                 LCM_EN=1;
 155   2                 _nop_();
 156   2                 _nop_();
 157   2                 }
 158   1              LCM_EN=0;
 159   1              
 160   1      }
 161          
 162          /**********LCM初始化子函数***********/
 163          
 164          void initLCM( )
 165          {   
 166   1              DATAPORT=0;     
 167   1              delay_LCM(15);
 168   1              WriteCommandLCM(0x38,0);    //三次显示模式设置，不检测忙信号
 169   1          delay_LCM(5); 
 170   1          WriteCommandLCM(0x38,0);
 171   1          delay_LCM(5); 
 172   1          WriteCommandLCM(0x38,0);
 173   1          delay_LCM(5); 
 174   1      
 175   1          WriteCommandLCM(0x38,1);    //8bit数据传送，2行显示，5*7字型，检测忙信号
 176   1          WriteCommandLCM(0x08,1);    //关闭显示，检测忙信号
 177   1          WriteCommandLCM(0x01,1);    //清屏，检测忙信号
 178   1          WriteCommandLCM(0x06,1);    //显示光标右移设置，检测忙信号
 179   1          WriteCommandLCM(0x0c,1);    //显示屏打开，光标不显示，不闪烁，检测忙信号
C51 COMPILER V7.08   SYSTEM_ALARM                                                          04/04/2007 16:55:38 PAGE 4   

 180   1      }
 181          
 182          /****************显示指定坐标的一个字符子函数*************/
 183          
 184          void DisplayOneChar(uchar X,uchar Y,uchar DData)
 185          {
 186   1          Y&=1;
 187   1          X&=15;
 188   1          if(Y)X|=0x40;               //若y为1（显示第二行），地址码+0X40
 189   1          X|=0x80;                    //指令码为地址码+0X80
 190   1          WriteCommandLCM(X,0);
 191   1          WriteDataLCM(DData);
 192   1      }
 193          
 194          /***********显示指定坐标的一串字符子函数***********/
 195          
 196          void DisplayListChar(uchar X,uchar Y,uchar code *DData)
 197          {
 198   1          uchar ListLength=0;
 199   1          Y&=0x01;
 200   1          X&=0x0f;
 201   1          while(X<16)
 202   1          {
 203   2              DisplayOneChar(X,Y,DData[ListLength]);
 204   2              ListLength++;
 205   2              X++;
 206   2          }
 207   1      }
 208          
 209          /***********ds18b20延迟子函数（晶振12MHz ）*******/ 
 210          
 211          void delay_18B20(unsigned int i)
 212          {
 213   1              while(i--);
 214   1      }
 215          
 216          /**********ds18b20初始化函数**********************/
 217          
 218          void Init_DS18B20(void) 
 219          {
 220   1               unsigned char x=0;
 221   1               DQ = 1;          //DQ复位
 222   1               delay_18B20(8);  //稍做延时
 223   1               DQ = 0;          //单片机将DQ拉低
 224   1               delay_18B20(80); //精确延时 大于 480us
 225   1               DQ = 1;          //拉高总线
 226   1               delay_18B20(14);
 227   1               x=DQ;            //稍做延时后 如果x=0则初始化成功 x=1则初始化失败
 228   1               delay_18B20(20);
 229   1      }
 230          
 231          /***********ds18b20读一个字节**************/  
 232          
 233          unsigned char ReadOneChar(void)
 234          {
 235   1              uchar i=0;
 236   1              uchar dat = 0;
 237   1              for (i=8;i>0;i--)
 238   1               {
 239   2                        DQ = 0; // 给脉冲信号
 240   2                        dat>>=1;
 241   2                        DQ = 1; // 给脉冲信号
C51 COMPILER V7.08   SYSTEM_ALARM                                                          04/04/2007 16:55:38 PAGE 5   

 242   2                        if(DQ)
 243   2                        dat|=0x80;
 244   2                        delay_18B20(4);
 245   2               }
 246   1              return(dat);
 247   1      }
 248          
 249          /*************ds18b20写一个字节****************/  
 250          
 251          void WriteOneChar(uchar dat)
 252          {
 253   1              unsigned char i=0;
 254   1              for (i=8; i>0; i--)
 255   1              {
 256   2                      DQ = 0;
 257   2                      DQ = dat&0x01;
 258   2              delay_18B20(5);
 259   2                      DQ = 1;
 260   2              dat>>=1;
 261   2       }
 262   1      }
 263          
 264          /**************读取ds18b20当前温度************/
 265          
 266          void ReadTemperature(void)
 267          {
 268   1              unsigned char a=0;
 269   1              unsigned char b=0;
 270   1              unsigned char t=0;
 271   1      
 272   1              Init_DS18B20();
 273   1              WriteOneChar(0xCC);     // 跳过读序号列号的操作
 274   1              WriteOneChar(0x44);     // 启动温度转换
 275   1      
 276   1              delay_18B20(100);       // this message is wery important
 277   1      
 278   1              Init_DS18B20();
 279   1              WriteOneChar(0xCC);     //跳过读序号列号的操作
 280   1              WriteOneChar(0xBE);     //读取温度寄存器等（共可读9个寄存器） 前两个就是温度
 281   1      
 282   1              delay_18B20(100);
 283   1      
 284   1              a=ReadOneChar();        //读取温度值低位
 285   1              b=ReadOneChar();                //读取温度值高位
 286   1              temp1=b<<4;
 287   1              temp1+=(a&0xf0)>>4;
 288   1              temp2=a&0x0f;
 289   1      
 290   1         temp=((b*256+a)>>4);    //当前采集温度值除16得实际温度值
 291   1      
 292   1      
 293   1      }
 294          
 295          /***************液晶显示子函数1正常显示*****************/
 296          
 297          void displayfun1(void)
 298          {       
 299   1              WriteCommandLCM(0x0c,1);                                         //显示屏打开，光标不显示，不闪烁，检测忙信号   
 300   1              DisplayListChar(0,0,str0);      
 301   1              DisplayListChar(0,1,str1);      
 302   1                                                                                                        
 303   1              DisplayOneChar(3,0,hour/10+0x30);                   //液晶上显示小时
C51 COMPILER V7.08   SYSTEM_ALARM                                                          04/04/2007 16:55:38 PAGE 6   

 304   1              DisplayOneChar(4,0,hour%10+0x30);
 305   1      
 306   1              DisplayOneChar(6,0,minite/10+0x30);                     //液晶上显示分
 307   1              DisplayOneChar(7,0,minite%10+0x30);
 308   1              
 309   1              DisplayOneChar(9,0,seconde/10+0x30);        //液晶上显示秒
 310   1              DisplayOneChar(10,0,seconde%10+0x30);
 311   1      
 312   1              DisplayOneChar(4,1,K/10+0x30);                      //液晶上显示设定的温度
 313   1              DisplayOneChar(5,1,K%10+0x30);
 314   1       
 315   1              DisplayOneChar(11,1,temp1/10+0x30);         //液晶上显示测得的温度  
 316   1              DisplayOneChar(12,1,temp1%10+0x30);
 317   1              DisplayOneChar(14,1,temp2/10+0x30);
 318   1      
 319   1              if(ON_OFF==0)                                                 //若温控标志为0
 320   1              {
 321   2                      DisplayOneChar(14,0,0x4f);                         // 液晶上显示不控温的标志
 322   2                      DisplayOneChar(15,0,0x46);
 323   2              }
 324   1              else
 325   1              {
 326   2                      DisplayOneChar(14,0,0x4f);                         // 液晶上显示控温的标志
 327   2                      DisplayOneChar(15,0,0x4e);
 328   2                      if(outflag==1)
 329   2                          DisplayOneChar(0,0,0x7c);                      
 330   2                  else
 331   2                              DisplayOneChar(0,0,0xef);
 332   2              }
 333   1      
 334   1              
 335   1      }
 336          /************液晶显示子函数2***************/
 337          
 338          void displayfun2(void)
 339          {
 340   1              WriteCommandLCM(0x0c,1);                     //显示屏打开，光标不显示，不闪烁，检测忙信号       
 341   1              DisplayListChar(0,0,str0);      
 342   1              DisplayListChar(0,1,str1);      
 343   1                      
 344   1              DisplayOneChar(6,0,minite/10+0x30);
 345   1              DisplayOneChar(7,0,minite%10+0x30);
 346   1              
 347   1              DisplayOneChar(9,0,seconde/10+0x30);
 348   1              DisplayOneChar(10,0,seconde%10+0x30);
 349   1      
 350   1              DisplayOneChar(4,1,K/10+0x30);                     
 351   1              DisplayOneChar(5,1,K%10+0x30);
 352   1       
 353   1              DisplayOneChar(11,1,temp1/10+0x30);         
 354   1              DisplayOneChar(12,1,temp1%10+0x30);
 355   1              DisplayOneChar(14,1,temp2/10+0x30);
 356   1      
 357   1              WriteCommandLCM(0x0f,1);                                         //显示屏打开，光标显示，闪烁，检测忙信号       
 358   1          DisplayOneChar(3,0,hour/10+0x30);
 359   1              DisplayOneChar(4,0,hour%10+0x30);
 360   1      }
 361          
 362          /**************液晶显示子函数3*****************/
 363          
 364          void displayfun3(void)
 365          {
C51 COMPILER V7.08   SYSTEM_ALARM                                                          04/04/2007 16:55:38 PAGE 7   

 366   1              WriteCommandLCM(0x0c,1);                                //显示屏打开，光标不显示，不闪烁，检测忙信号    
 367   1              DisplayListChar(0,0,str0);      
 368   1              DisplayListChar(0,1,str1);      
 369   1              
 370   1              DisplayOneChar(3,0,hour/10+0x30);
 371   1              DisplayOneChar(4,0,hour%10+0x30); 
 372   1      
 373   1              DisplayOneChar(9,0,seconde/10+0x30);
 374   1              DisplayOneChar(10,0,seconde%10+0x30);
 375   1      
 376   1              DisplayOneChar(4,1,K/10+0x30);                     
 377   1              DisplayOneChar(5,1,K%10+0x30);
 378   1      
 379   1              DisplayOneChar(11,1,temp1/10+0x30);         
 380   1              DisplayOneChar(12,1,temp1%10+0x30);
 381   1              DisplayOneChar(14,1,temp2/10+0x30);
 382   1      
 383   1         
 384   1              WriteCommandLCM(0x0f,1);                                         //显示屏打开，光标显示，闪烁，检测忙信号
 385   1              DisplayOneChar(6,0,minite/10+0x30);
 386   1              DisplayOneChar(7,0,minite%10+0x30);
 387   1      
 388   1      }
 389          
 390          /**************液晶显示子函数4 *****************/
 391          
 392          void displayfun4(void)
 393          {
 394   1              WriteCommandLCM(0x0c,1);                                //显示屏打开，光标不显示，不闪烁，检测忙信号    
 395   1              DisplayListChar(0,0,str0);      
 396   1              DisplayListChar(0,1,str1);      
 397   1              
 398   1              DisplayOneChar(3,0,hour/10+0x30);
 399   1              DisplayOneChar(4,0,hour%10+0x30); 
 400   1      
 401   1              DisplayOneChar(6,0,minite/10+0x30);
 402   1              DisplayOneChar(7,0,minite%10+0x30);
 403   1      
 404   1              DisplayOneChar(9,0,seconde/10+0x30);
 405   1              DisplayOneChar(10,0,seconde%10+0x30);
 406   1      
 407   1              
 408   1              DisplayOneChar(11,1,temp1/10+0x30);         
 409   1              DisplayOneChar(12,1,temp1%10+0x30);
 410   1              DisplayOneChar(14,1,temp2/10+0x30);
 411   1      
 412   1         
 413   1              WriteCommandLCM(0x0f,1);                                         //显示屏打开，光标显示，闪烁，检测忙信号
 414   1              DisplayOneChar(4,1,K/10+0x30);                     
 415   1              DisplayOneChar(5,1,K%10+0x30);
 416   1      
 417   1      }
 418          
 419          /**************键盘扫描子函数******************/
 420          
 421          void keyscan(void)
 422          {
 423   1              uchar xx;                                           //局部变量
 424   1              P1=0xff;
 425   1              if(P1!=0xff)
 426   1                {
 427   2                  delay_LCM(50);
C51 COMPILER V7.08   SYSTEM_ALARM                                                          04/04/2007 16:55:38 PAGE 8   

 428   2      
 429   2                      if(P1!=0xff)
 430   2                        {     
 431   3                              xx=P1;
 432   3                              switch(xx)                                                     // 根据按键状态，调用不同的子函数
 433   3                              {
 434   4                                      case 0xfe:set_adj();       break;               
 435   4                                      case 0xfd:inc_key();       break;               
 436   4                                      case 0xfb:dec_key();       break;               
 437   4                                      case 0xf7:ON_OFF=!ON_OFF;  break;
 438   4                                      default:break;
 439   4                              }
 440   3                        }
 441   2                      
 442   2                }
 443   1        
 444   1      }
 445          
 446          /**************设定工作模式子函数****************/
 447          
 448          void set_adj(void)
 449          {
 450   1              delay_LCM(100);
 451   1              set++;
 452   1          if(set>=4)set=0;
 453   1                      
 454   1      }
 455          
 456          /****************按键加法子函数******************/
 457          
 458          void inc_key(void)
 459          {
 460   1              delay_LCM(100);
 461   1                      
 462   1              switch(set)
 463   1              {
 464   2                      case 0:if(P1==0xf7)ON_OFF=!ON_OFF;       break;
 465   2                      case 1:hour++;   if(hour>=23)hour=23;    break;
 466   2                      case 2:minite++; if(minite>=59)minite=59;break;
 467   2                      case 3:K++;if(K>=99)K=99;                                break; 
 468   2                      default:break;
 469   2              }
 470   1                      
 471   1      }
 472          
 473          /****************按键减法子函数*****************/
 474          
 475          void dec_key(void)
 476          {
 477   1              delay_LCM(100);
 478   1              
 479   1              switch(set)
 480   1              {
 481   2                      case 0:if(P1==0xf7)ON_OFF=!ON_OFF;    break;
 482   2                      case 1:hour--;  if(hour<=0)hour=0;    break;
 483   2                      case 2:minite--;if(minite<=0)minite=0;break;
 484   2                      case 3:K--;if(K<=1)K=1;                           break; 
 485   2                      default:break;
 486   2              }
 487   1                      
 488   1      }
 489          
C51 COMPILER V7.08   SYSTEM_ALARM                                                          04/04/2007 16:55:38 PAGE 9   

 490          /***************定时器t0初始化*******************/
 491          
 492          void init_timer0(void)
 493          {
 494   1               TMOD=0x01;                                  //time0为定时器，方式1
 495   1           TH0=0x3c;                                   //预置计数初值
 496   1           TL0=0xb0;
 497   1           EA=1;                                                              
 498   1           ET0=1;                                                                                             
 499   1           TR0=1;                     
 500   1      }
 501          
 502          /***********定时器t0中断子函数**************/
 503          
 504          void timer0(void) interrupt 1 using 0          //定时器0方式1，50ms中断一次
 505          {
 506   1           TH0=0x3c;
 507   1           TL0=0xb0;
 508   1           mstcnt++;
 509   1           if(mstcnt>=20 )  {seconde++; mstcnt=0; }
 510   1               if(seconde>=60)  {minite++;  seconde=0;}
 511   1               if(minite>=60 )  {hour++;    minite=0; }
 512   1               if(hour>=24   )  {hour=0;}
 513   1               keyscan( );                               //按键扫描
 514   1      }
 515          
 516          /***********the main funtion*************/
 517              
 518          void main(void)
 519          { 
 520   1      
 521   1          P1=0xff;                                                            //初始化p1口，全设为1       
 522   1              delay_LCM(500);                                         //延时500ms启动
 523   1              initLCM( );                                                             //LCD初始化
 524   1              init_timer0( );                                                         //时钟定时器0初始化     
 525   1          Init_DS18B20( ) ;                                                   //DS18B20初始化
 526   1              DisplayListChar(0,0,str0);      
 527   1              DisplayListChar(0,1,str1);  
 528   1                              
 529   1          while (1)
 530   1          {   
 531   2              keyscan();                                            //按键扫描                
 532   2                  ReadTemperature();                                    //温度采集
 533   2                  switch(set)                                           //LCD根据工作模式显示
 534   2                      {
 535   3                              case 0:displayfun1();delay_LCM(1000);break;       //正常工作显示
 536   3                              case 1:displayfun2();delay_LCM(1000);break;       //调整时显示
 537   3                              case 2:displayfun3();delay_LCM(1000);break;       //调整分显示
 538   3                              case 3:displayfun4();delay_LCM(1000);break;       //温度设定
 539   3                              default:break;
 540   3                      }       
 541   2                      keyscan( );                                          //相当于延时
 542   2                      if(ON_OFF==1)                                                                        //若温控标志位1， 控制LAMP动作
 543   2                      {
 544   3                              if(temp1>=K+1){outflag=1;OUT=0;}
 545   3                              if(temp1<K)
 546   3                              { 
 547   4                                      delay_LCM(1000);
 548   4                                      if(temp1<K){outflag=0;OUT=1;}                   //
 549   4                              }
 550   3                      }
 551   2                      else{outflag=0;OUT=1;}
C51 COMPILER V7.08   SYSTEM_ALARM                                                          04/04/2007 16:55:38 PAGE 10  

 552   2          }
 553   1              
 554   1      }
 555          
 556          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1747    ----
   CONSTANT SIZE    =     34    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
