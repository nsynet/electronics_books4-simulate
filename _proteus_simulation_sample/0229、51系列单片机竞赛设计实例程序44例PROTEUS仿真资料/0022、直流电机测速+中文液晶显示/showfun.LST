C51 COMPILER V6.12  SHOWFUN                                                                06/05/2007 15:43:31 PAGE 1   


C51 COMPILER V6.12, COMPILATION OF MODULE SHOWFUN
OBJECT MODULE PLACED IN .\showfun.OBJ
COMPILER INVOKED BY: D:\Program Files\keil\C51\BIN\C51.EXE .\showfun.c DEBUG OBJECTEXTEND

stmt level    source

   1          
   2          /************************************************************************************/
   3          /* LCM 240128 显示程序 */
   4          /* MCU 型号: Winbond W78E58-24 */
   5          /* 时钟频率: 22.1184 MHz */
   6          /* 接口方式: 直接接口（挂总线） */
   7          /* 开发环境: Keil C51 V6.14 */
   8          /* 开发日期: 2001.06.12- */
   9          /* 程序编写: Youth */
  10          /************************************************************************************/
  11          
  12          #include <stdarg.h>
  13          #include <stdio.h>
  14          #include <math.h>
  15          #include <intrins.h>
  16          #include <absacc.h>
  17          #include <string.h>
  18          #include <showfun.h>
  19          
  20          
  21          
  22          code uchar const uPowArr[] = {0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
  23          
  24          // ASCII 字模宽度及高度定义
  25          #define ASC_CHR_WIDTH 8
  26          #define ASC_CHR_HEIGHT 12
  27          #define HZ_CHR_HEIGHT 12
  28          #define HZ_CHR_WIDTH 12
  29          
  30          char code MSK1[]={0x00,0x01,0x03,0x07,0x0f,0x1f,0x3f,0x7f,0xff};
  31          char code MSK2[]={0x00,0x80,0xc0,0xe0,0xf0,0xf8,0xfc,0xfe,0xff};
  32          char code ASC_MSK[96*12] = {
  33          // Terminal9; 此字体下对应的点阵为：宽x高=8x12
  34          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff, // < 0x20时,打印此字
  35          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// ' '
  36          0x00,0x30,0x78,0x78,0x78,0x30,0x30,0x00,0x30,0x30,0x00,0x00,// '!'
  37          0x00,0x66,0x66,0x66,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// '"'
  38          0x00,0x6c,0x6c,0xfe,0x6c,0x6c,0x6c,0xfe,0x6c,0x6c,0x00,0x00,// '#'
  39          0x30,0x30,0x7c,0xc0,0xc0,0x78,0x0c,0x0c,0xf8,0x30,0x30,0x00,// '$'
  40          0x00,0x00,0x00,0xc4,0xcc,0x18,0x30,0x60,0xcc,0x8c,0x00,0x00,// '%'
  41          0x00,0x70,0xd8,0xd8,0x70,0xfa,0xde,0xcc,0xdc,0x76,0x00,0x00,// '&'
  42          0x00,0x30,0x30,0x30,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// '''
  43          0x00,0x0c,0x18,0x30,0x60,0x60,0x60,0x30,0x18,0x0c,0x00,0x00,// '('
  44          0x00,0x60,0x30,0x18,0x0c,0x0c,0x0c,0x18,0x30,0x60,0x00,0x00,// ')'
  45          0x00,0x00,0x00,0x66,0x3c,0xff,0x3c,0x66,0x00,0x00,0x00,0x00,// '*'
  46          0x00,0x00,0x00,0x18,0x18,0x7e,0x18,0x18,0x00,0x00,0x00,0x00,// '+'
  47          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x38,0x60,0x00,// ','
  48          0x00,0x00,0x00,0x00,0x00,0xfe,0x00,0x00,0x00,0x00,0x00,0x00,// '-'
  49          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x38,0x00,0x00,// '.'
  50          0x00,0x00,0x02,0x06,0x0c,0x18,0x30,0x60,0xc0,0x80,0x00,0x00,// '/'
  51          0x00,0x7c,0xc6,0xce,0xde,0xd6,0xf6,0xe6,0xc6,0x7c,0x00,0x00,// '0'
  52          0x00,0x10,0x30,0xf0,0x30,0x30,0x30,0x30,0x30,0xfc,0x00,0x00,// '1'
  53          0x00,0x78,0xcc,0xcc,0x0c,0x18,0x30,0x60,0xcc,0xfc,0x00,0x00,// '2'
  54          0x00,0x78,0xcc,0x0c,0x0c,0x38,0x0c,0x0c,0xcc,0x78,0x00,0x00,// '3'
  55          0x00,0x0c,0x1c,0x3c,0x6c,0xcc,0xfe,0x0c,0x0c,0x1e,0x00,0x00,// '4'
C51 COMPILER V6.12  SHOWFUN                                                                06/05/2007 15:43:31 PAGE 2   

  56          0x00,0xfc,0xc0,0xc0,0xc0,0xf8,0x0c,0x0c,0xcc,0x78,0x00,0x00,// '5'
  57          0x00,0x38,0x60,0xc0,0xc0,0xf8,0xcc,0xcc,0xcc,0x78,0x00,0x00,// '6'
  58          0x00,0xfe,0xc6,0xc6,0x06,0x0c,0x18,0x30,0x30,0x30,0x00,0x00,// '7'
  59          0x00,0x78,0xcc,0xcc,0xec,0x78,0xdc,0xcc,0xcc,0x78,0x00,0x00,// '8'
  60          0x00,0x78,0xcc,0xcc,0xcc,0x7c,0x18,0x18,0x30,0x70,0x00,0x00,// '9'
  61          0x00,0x00,0x00,0x38,0x38,0x00,0x00,0x38,0x38,0x00,0x00,0x00,// ':'
  62          0x00,0x00,0x00,0x38,0x38,0x00,0x00,0x38,0x38,0x18,0x30,0x00,// ';'
  63          0x00,0x0c,0x18,0x30,0x60,0xc0,0x60,0x30,0x18,0x0c,0x00,0x00,// '<'
  64          0x00,0x00,0x00,0x00,0x7e,0x00,0x7e,0x00,0x00,0x00,0x00,0x00,// '='
  65          0x00,0x60,0x30,0x18,0x0c,0x06,0x0c,0x18,0x30,0x60,0x00,0x00,// '>'
  66          0x00,0x78,0xcc,0x0c,0x18,0x30,0x30,0x00,0x30,0x30,0x00,0x00,// '?'
  67          0x00,0x7c,0xc6,0xc6,0xde,0xde,0xde,0xc0,0xc0,0x7c,0x00,0x00,// '@'
  68          0x00,0x30,0x78,0xcc,0xcc,0xcc,0xfc,0xcc,0xcc,0xcc,0x00,0x00,// 'A'
  69          0x00,0xfc,0x66,0x66,0x66,0x7c,0x66,0x66,0x66,0xfc,0x00,0x00,// 'B'
  70          0x00,0x3c,0x66,0xc6,0xc0,0xc0,0xc0,0xc6,0x66,0x3c,0x00,0x00,// 'C'
  71          0x00,0xf8,0x6c,0x66,0x66,0x66,0x66,0x66,0x6c,0xf8,0x00,0x00,// 'D'
  72          0x00,0xfe,0x62,0x60,0x64,0x7c,0x64,0x60,0x62,0xfe,0x00,0x00,// 'E'
  73          0x00,0xfe,0x66,0x62,0x64,0x7c,0x64,0x60,0x60,0xf0,0x00,0x00,// 'F'
  74          0x00,0x3c,0x66,0xc6,0xc0,0xc0,0xce,0xc6,0x66,0x3e,0x00,0x00,// 'G'
  75          0x00,0xcc,0xcc,0xcc,0xcc,0xfc,0xcc,0xcc,0xcc,0xcc,0x00,0x00,// 'H'
  76          0x00,0x78,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x78,0x00,0x00,// 'I'
  77          0x00,0x1e,0x0c,0x0c,0x0c,0x0c,0xcc,0xcc,0xcc,0x78,0x00,0x00,// 'J'
  78          0x00,0xe6,0x66,0x6c,0x6c,0x78,0x6c,0x6c,0x66,0xe6,0x00,0x00,// 'K'
  79          0x00,0xf0,0x60,0x60,0x60,0x60,0x62,0x66,0x66,0xfe,0x00,0x00,// 'L'
  80          0x00,0xc6,0xee,0xfe,0xfe,0xd6,0xc6,0xc6,0xc6,0xc6,0x00,0x00,// 'M'
  81          0x00,0xc6,0xc6,0xe6,0xf6,0xfe,0xde,0xce,0xc6,0xc6,0x00,0x00,// 'N'
  82          0x00,0x38,0x6c,0xc6,0xc6,0xc6,0xc6,0xc6,0x6c,0x38,0x00,0x00,// 'O'
  83          0x00,0xfc,0x66,0x66,0x66,0x7c,0x60,0x60,0x60,0xf0,0x00,0x00,// 'P'
  84          0x00,0x38,0x6c,0xc6,0xc6,0xc6,0xce,0xde,0x7c,0x0c,0x1e,0x00,// 'Q'
  85          0x00,0xfc,0x66,0x66,0x66,0x7c,0x6c,0x66,0x66,0xe6,0x00,0x00,// 'R'
  86          0x00,0x78,0xcc,0xcc,0xc0,0x70,0x18,0xcc,0xcc,0x78,0x00,0x00,// 'S'
  87          0x00,0xfc,0xb4,0x30,0x30,0x30,0x30,0x30,0x30,0x78,0x00,0x00,// 'T'
  88          0x00,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0x78,0x00,0x00,// 'U'
  89          0x00,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0x78,0x30,0x00,0x00,// 'V'
  90          0x00,0xc6,0xc6,0xc6,0xc6,0xd6,0xd6,0x6c,0x6c,0x6c,0x00,0x00,// 'W'
  91          0x00,0xcc,0xcc,0xcc,0x78,0x30,0x78,0xcc,0xcc,0xcc,0x00,0x00,// 'X'
  92          0x00,0xcc,0xcc,0xcc,0xcc,0x78,0x30,0x30,0x30,0x78,0x00,0x00,// 'Y'
  93          0x00,0xfe,0xce,0x98,0x18,0x30,0x60,0x62,0xc6,0xfe,0x00,0x00,// 'Z'
  94          0x00,0x3c,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x3c,0x00,0x00,// '['
  95          0x00,0x00,0x80,0xc0,0x60,0x30,0x18,0x0c,0x06,0x02,0x00,0x00,// '\'
  96          0x00,0x3c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x3c,0x00,0x00,// ']'
  97          0x10,0x38,0x6c,0xc6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// '^'
  98          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0x00,// '_'
  99          0x30,0x30,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// '`'
 100          0x00,0x00,0x00,0x00,0x78,0x0c,0x7c,0xcc,0xcc,0x76,0x00,0x00,// 'a'
 101          0x00,0xe0,0x60,0x60,0x7c,0x66,0x66,0x66,0x66,0xdc,0x00,0x00,// 'b'
 102          0x00,0x00,0x00,0x00,0x78,0xcc,0xc0,0xc0,0xcc,0x78,0x00,0x00,// 'c'
 103          0x00,0x1c,0x0c,0x0c,0x7c,0xcc,0xcc,0xcc,0xcc,0x76,0x00,0x00,// 'd'
 104          0x00,0x00,0x00,0x00,0x78,0xcc,0xfc,0xc0,0xcc,0x78,0x00,0x00,// 'e'
 105          0x00,0x38,0x6c,0x60,0x60,0xf8,0x60,0x60,0x60,0xf0,0x00,0x00,// 'f'
 106          0x00,0x00,0x00,0x00,0x76,0xcc,0xcc,0xcc,0x7c,0x0c,0xcc,0x78,// 'g'
 107          0x00,0xe0,0x60,0x60,0x6c,0x76,0x66,0x66,0x66,0xe6,0x00,0x00,// 'h'
 108          0x00,0x18,0x18,0x00,0x78,0x18,0x18,0x18,0x18,0x7e,0x00,0x00,// 'i'
 109          0x00,0x0c,0x0c,0x00,0x3c,0x0c,0x0c,0x0c,0x0c,0xcc,0xcc,0x78,// 'j'
 110          0x00,0xe0,0x60,0x60,0x66,0x6c,0x78,0x6c,0x66,0xe6,0x00,0x00,// 'k'
 111          0x00,0x78,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x7e,0x00,0x00,// 'l'
 112          0x00,0x00,0x00,0x00,0xfc,0xd6,0xd6,0xd6,0xd6,0xc6,0x00,0x00,// 'm'
 113          0x00,0x00,0x00,0x00,0xf8,0xcc,0xcc,0xcc,0xcc,0xcc,0x00,0x00,// 'n'
 114          0x00,0x00,0x00,0x00,0x78,0xcc,0xcc,0xcc,0xcc,0x78,0x00,0x00,// 'o'
 115          0x00,0x00,0x00,0x00,0xdc,0x66,0x66,0x66,0x66,0x7c,0x60,0xf0,// 'p'
 116          0x00,0x00,0x00,0x00,0x76,0xcc,0xcc,0xcc,0xcc,0x7c,0x0c,0x1e,// 'q'
 117          0x00,0x00,0x00,0x00,0xec,0x6e,0x76,0x60,0x60,0xf0,0x00,0x00,// 'r'
C51 COMPILER V6.12  SHOWFUN                                                                06/05/2007 15:43:31 PAGE 3   

 118          0x00,0x00,0x00,0x00,0x78,0xcc,0x60,0x18,0xcc,0x78,0x00,0x00,// 's'
 119          0x00,0x00,0x20,0x60,0xfc,0x60,0x60,0x60,0x6c,0x38,0x00,0x00,// 't'
 120          0x00,0x00,0x00,0x00,0xcc,0xcc,0xcc,0xcc,0xcc,0x76,0x00,0x00,// 'u'
 121          0x00,0x00,0x00,0x00,0xcc,0xcc,0xcc,0xcc,0x78,0x30,0x00,0x00,// 'v'
 122          0x00,0x00,0x00,0x00,0xc6,0xc6,0xd6,0xd6,0x6c,0x6c,0x00,0x00,// 'w'
 123          0x00,0x00,0x00,0x00,0xc6,0x6c,0x38,0x38,0x6c,0xc6,0x00,0x00,// 'x'
 124          0x00,0x00,0x00,0x00,0x66,0x66,0x66,0x66,0x3c,0x0c,0x18,0xf0,// 'y'
 125          0x00,0x00,0x00,0x00,0xfc,0x8c,0x18,0x60,0xc4,0xfc,0x00,0x00,// 'z'
 126          0x00,0x1c,0x30,0x30,0x60,0xc0,0x60,0x30,0x30,0x1c,0x00,0x00,// '{'
 127          0x00,0x18,0x18,0x18,0x18,0x00,0x18,0x18,0x18,0x18,0x00,0x00,// '|'
 128          0x00,0xe0,0x30,0x30,0x18,0x0c,0x18,0x30,0x30,0xe0,0x00,0x00,// '}'
 129          0x00,0x73,0xda,0xce,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// '~'
 130          };
 131          
 132          typedef struct typFNT_GB16 // 汉字字模显示数据结构
 133          {
 134          char Index[2];
 135          char Msk[24];
 136          };
 137          struct typFNT_GB16 code GB_16[] = { // 显示为12*12
 138          "中",0x04,0x00,0x04,0x00,0x7F,0xC0,0x44,0x40,0x44,0x40,0x44,0x40,0x7F,0xC0,0x04,0x00,0x04,0x00,0x04,0x00,0
             -x04,0x00,0x00,0x00,
 139          "文",0x08,0x00,0x04,0x40,0xFF,0xE0,0x11,0x00,0x11,0x00,0x11,0x00,0x0A,0x00,0x0A,0x00,0x04,0x00,0x1B,0x00,0
             -xE0,0xE0,0x00,0x00,
 140          "测",0x9E,0x20,0x52,0x20,0x12,0xA0,0x96,0xA0,0x56,0xA0,0x56,0xA0,0x56,0xA0,0xD6,0xA0,0x44,0xA0,0x4A,0x20,0
             -x71,0x60,0x00,0x00,
 141          "试",0x80,0xC0,0x40,0xA0,0x5F,0xE0,0x00,0x80,0xC0,0x80,0x4F,0x80,0x44,0x80,0x44,0x80,0x57,0xA0,0x6C,0x60,0
             -x40,0x20,0x00,0x00,
 142          "液",0x81,0x00,0x5F,0xE0,0x25,0x00,0x85,0xC0,0xAA,0x40,0x4E,0xC0,0x5A,0x40,0x49,0x80,0xC8,0x80,0x49,0x40,0
             -x4E,0x20,0x00,0x00,
 143          "晶",0x1F,0x80,0x10,0x80,0x1F,0x80,0x10,0x80,0x1F,0x80,0x00,0x00,0x7B,0xE0,0x4A,0x20,0x7B,0xE0,0x4A,0x20,0
             -x7B,0xE0,0x00,0x00,
 144          "显",0x3F,0x80,0x20,0x80,0x3F,0x80,0x20,0x80,0x3F,0x80,0x00,0x00,0x4A,0x40,0x2A,0x40,0x2A,0x80,0x0B,0x00,0
             -xFF,0xE0,0x00,0x00,
 145          "示",0x00,0x80,0x7F,0xC0,0x00,0x00,0x00,0x00,0xFF,0xE0,0x04,0x00,0x14,0x80,0x24,0x40,0x44,0x20,0x84,0x20,0
             -x1C,0x00,0x00,0x00,
 146          //"及",0x7F,0x80,0x10,0x80,0x11,0x00,0x11,0x00,0x19,0xC0,0x14,0x40,0x14,0x80,0x23,0x00,0x23,0x00,0x4C,0x80
             -,0xB0,0x60,0x00,0x00,
 147          //"的",0x11,0x00,0x21,0x00,0xFB,0xE0,0x8A,0x20,0x8C,0x20,0x8A,0x20,0xF9,0x20,0x89,0x20,0x88,0x20,0xF8,0x20
             -,0x89,0xC0,0x00,0x00,
 148          //"试",0x80,0xC0,0x40,0xA0,0x5F,0xE0,0x00,0x80,0xC0,0x80,0x4F,0x80,0x44,0x80,0x44,0x80,0x57,0xA0,0x6C,0x60
             -,0x40,0x20,0x00,0x00,
 149          //"验",0xF1,0x00,0x11,0x00,0x52,0x80,0x54,0x40,0x5B,0xA0,0xF0,0x00,0x15,0x40,0x35,0x40,0xD5,0x40,0x10,0x80
             -,0x6F,0xE0,0x00,0x00,
 150          //"程",0x37,0xC0,0xE4,0x40,0x24,0x40,0xF7,0xC0,0x20,0x00,0x6F,0xE0,0x71,0x00,0xA7,0xC0,0xA1,0x00,0x21,0x00
             -,0x2F,0xE0,0x00,0x00,
 151          //"序",0x04,0x00,0x7F,0xE0,0x40,0x00,0x5F,0x80,0x45,0x00,0x42,0x00,0x7F,0xE0,0x42,0x40,0x42,0x00,0x82,0x00
             -,0x8E,0x00,0x00,0x00,
 152          "键",0x41,0x00,0x7F,0xC0,0x89,0x40,0xEB,0xE0,0x5D,0x40,0x47,0xC0,0xF5,0x00,0x57,0xE0,0x49,0x00,0x6D,0x00,0
             -x53,0xE0,0x00,0x00,
 153          "盘",0x08,0x00,0x3F,0x80,0x24,0x80,0xFF,0xE0,0x28,0x80,0x25,0x80,0x40,0x00,0xBF,0xC0,0x2A,0x40,0x2A,0x40,0
             -xFF,0xE0,0x00,0x00,
 154          //"字",0x04,0x00,0x7F,0xE0,0xC0,0x20,0x3F,0x80,0x02,0x00,0x04,0x00,0xFF,0xE0,0x04,0x00,0x04,0x00,0x04,0x00
             -,0x1C,0x00,0x00,0x00,
 155          //"可",0x00,0x40,0xFF,0xE0,0x00,0x80,0x7C,0x80,0x44,0x80,0x44,0x80,0x44,0x80,0x7C,0x80,0x44,0x80,0x00,0x80
             -,0x03,0x80,0x00,0x00,
 156          //"以",0x00,0x80,0x48,0x80,0x44,0x80,0x44,0x80,0x40,0x80,0x40,0x80,0x48,0x80,0x50,0x80,0x61,0x40,0x46,0x20
             -,0x18,0x20,0x00,0x00,
 157          "按",0x21,0x00,0x2F,0xE0,0xF8,0x20,0x22,0x00,0x32,0x00,0x6F,0xE0,0xA4,0x40,0x24,0x80,0x23,0x80,0x21,0x40,0
             -xEE,0x20,0x00,0x00,
 158          "点",0x04,0x00,0x07,0xC0,0x04,0x00,0x04,0x00,0x3F,0x80,0x20,0x80,0x20,0x80,0x3F,0x80,0x00,0x00,0x49,0x40,0
             -xC9,0x20,0x00,0x00,
C51 COMPILER V6.12  SHOWFUN                                                                06/05/2007 15:43:31 PAGE 4   

 159          "定",0x04,0x00,0x7F,0xE0,0xC0,0x20,0x00,0x00,0x7F,0xC0,0x04,0x00,0x24,0x00,0x27,0xC0,0x34,0x00,0x4C,0x00,0
             -x83,0xE0,0x00,0x00,
 160          "位",0x24,0x00,0x22,0x00,0x5F,0xE0,0x40,0x00,0xC8,0x80,0x48,0x80,0x44,0x80,0x45,0x00,0x45,0x00,0x41,0x00,0
             -x5F,0xE0,0x00,0x00,
 161          "直",0x04,0x00,0xFF,0xE0,0x04,0x00,0x3F,0x80,0x20,0x80,0x20,0x80,0x3F,0x80,0x20,0x80,0x3F,0x80,0x20,0x80,0
             -xFF,0xE0,0x00,0x00,
 162          "线",0x22,0x80,0x22,0x40,0x52,0x60,0x97,0x80,0xE2,0x60,0x4F,0x80,0xB2,0x40,0xC2,0x80,0x31,0x20,0xC6,0xA0,0
             -x18,0x60,0x00,0x00,
 163          "绘",0x21,0x00,0x21,0x00,0x52,0x80,0x94,0x40,0xEB,0xA0,0x20,0x00,0x5F,0xE0,0xE2,0x00,0x02,0x80,0xF4,0x40,0
             -x8F,0xE0,0x00,0x00,
 164          "制",0x10,0x20,0x54,0x20,0x7E,0xA0,0x90,0xA0,0xFE,0xA0,0x10,0xA0,0x7E,0xA0,0x52,0xA0,0x52,0x20,0x56,0x20,0
             -x10,0xE0,0x00,0x00,
 165          "图",0x7F,0xE0,0x48,0x20,0x5F,0x20,0x6A,0x20,0x44,0x20,0x4A,0x20,0x75,0xA0,0x42,0x20,0x4C,0x20,0x42,0x20,0
             -x7F,0xE0,0x00,0x00,
 166          "片",0x22,0x00,0x22,0x00,0x22,0x00,0x3F,0xE0,0x20,0x00,0x20,0x00,0x3F,0x00,0x21,0x00,0x21,0x00,0x41,0x00,0
             -x81,0x00,0x00,0x00,
 167          "绘",0x21,0x00,0x21,0x00,0x52,0x80,0x94,0x40,0xEB,0xA0,0x20,0x00,0x5F,0xE0,0xE2,0x00,0x02,0x80,0xF4,0x40,0
             -x8F,0xE0,0x00,0x00,
 168          "制",0x10,0x20,0x54,0x20,0x7E,0xA0,0x90,0xA0,0xFE,0xA0,0x10,0xA0,0x7E,0xA0,0x52,0xA0,0x52,0x20,0x56,0x20,0
             -x10,0xE0,0x00,0x00,
 169          
 170          "流",0x82,0x00,0x5F,0xE0,0x42,0x00,0x04,0x80,0xAF,0xC0,0x60,0x40,0x2A,0x80,0x4A,0x80,0xCA,0xA0,0x52,0xA0,0
             -x62,0xE0,0x00,0x00,
 171          "电",0x04,0x00,0x04,0x40,0x7F,0xE0,0x44,0x40,0x7F,0xC0,0x44,0x40,0x44,0x40,0x7F,0xC0,0x44,0x00,0x04,0x20,0
             -x03,0xE0,0x00,0x00,
 172          "机",0x20,0x80,0x27,0xC0,0xFC,0x80,0x24,0x80,0x24,0x80,0x74,0x80,0x6C,0x80,0xA4,0x80,0xA4,0xA0,0x28,0xA0,0
             -x30,0xE0,0x00,0x00,
 173          "加",0x20,0x00,0x20,0x00,0xFD,0xE0,0x25,0x20,0x25,0x20,0x25,0x20,0x25,0x20,0x25,0x20,0x45,0x20,0x45,0xE0,0
             -x99,0x20,0x00,0x00,
 174          "减",0x81,0x40,0x41,0x40,0x5F,0xE0,0x11,0x00,0x5F,0x20,0x51,0x20,0x9F,0x40,0x9A,0x80,0xAE,0xA0,0xA9,0x60,0
             -x42,0x20,0x00,0x00,
 175          "速",0x82,0x00,0x5F,0xE0,0x42,0x00,0x0F,0xC0,0xCA,0x40,0x4F,0xC0,0x43,0x00,0x46,0x80,0x5A,0x40,0xA2,0x00,0
             -x9F,0xE0,0x00,0x00,
 176          "及",0x7F,0x80,0x10,0x80,0x11,0x00,0x11,0x00,0x19,0xC0,0x14,0x40,0x14,0x80,0x23,0x00,0x23,0x00,0x4C,0x80,0
             -xB0,0x60,0x00,0x00,
 177          
 178          "系",0x03,0xC0,0x7C,0x00,0x08,0x80,0x3F,0x00,0x04,0x00,0x08,0x80,0x3F,0xC0,0x15,0x00,0x24,0x80,0x44,0x40,0
             -x9C,0x20,0x00,0x00,
 179          "统",0x21,0x00,0x27,0xE0,0x51,0x00,0xF2,0x00,0x24,0x40,0x47,0xE0,0xF2,0x80,0x02,0x80,0x32,0xA0,0xC4,0xA0,0
             -x18,0xE0,0x00,0x00,
 180          "步",0x04,0x00,0x27,0xC0,0x24,0x00,0x24,0x00,0xFF,0xE0,0x04,0x00,0x14,0x40,0x24,0x80,0x41,0x00,0x06,0x00,0
             -x78,0x00,0x00,0x00,
 181          "长",0x20,0x80,0x21,0x00,0x22,0x00,0x24,0x00,0x28,0x00,0xFF,0xE0,0x24,0x00,0x22,0x00,0x21,0x00,0x2C,0x80,0
             -x30,0x60,0x00,0x00,
 182          "顺",0x57,0xE0,0x51,0x00,0x57,0xE0,0x54,0x20,0x55,0x20,0x55,0x20,0x55,0x20,0x55,0x20,0x51,0x80,0x92,0x40,0
             -x8C,0x20,0x00,0x00,
 183          "时",0x00,0x80,0xF0,0x80,0x9F,0xE0,0x90,0x80,0x94,0x80,0xF2,0x80,0x92,0x80,0x90,0x80,0xF0,0x80,0x90,0x80,0
             -x03,0x80,0x00,0x00,
 184          "针",0x41,0x00,0x41,0x00,0x79,0x00,0x81,0x00,0xF7,0xE0,0x21,0x00,0xF9,0x00,0x21,0x00,0x29,0x00,0x31,0x00,0
             -x21,0x00,0x00,0x00,
 185          "旋",0x42,0x00,0x23,0xE0,0xF4,0x00,0x4F,0xE0,0x71,0x20,0x55,0x40,0x55,0x00,0x55,0xE0,0x55,0x00,0xB7,0x00,0
             -x89,0xE0,0x00,0x00,
 186          "转",0x21,0x00,0xF9,0x00,0x47,0xE0,0x61,0x00,0xA7,0xE0,0xFA,0x00,0x23,0xC0,0x38,0x40,0xE0,0x80,0x23,0x00,0
             -x20,0x80,0x00,0x00,
 187          "逆",0x84,0x40,0x42,0x80,0x5F,0xE0,0x01,0x00,0xC9,0x40,0x49,0x40,0x4F,0xC0,0x42,0x00,0x44,0x00,0xA8,0x00,0
             -x9F,0xE0,0x00,0x00,
 188          
 189          //"旋",0x42,0x00,0x23,0xE0,0xF4,0x00,0x4F,0xE0,0x71,0x20,0x55,0x40,0x55,0x00,0x55,0xE0,0x55,0x00,0xB7,0x00
             -,0x89,0xE0,0x00,0x00,
 190          //"转",0x21,0x00,0xF9,0x00,0x47,0xE0,0x61,0x00,0xA7,0xE0,0xFA,0x00,0x23,0xC0,0x38,0x40,0xE0,0x80,0x23,0x00
             -,0x20,0x80,0x00,0x00,
 191          "方",0x04,0x00,0x02,0x40,0xFF,0xE0,0x08,0x00,0x0F,0x80,0x08,0x80,0x08,0x80,0x10,0x80,0x10,0x80,0x20,0x80,0
C51 COMPILER V6.12  SHOWFUN                                                                06/05/2007 15:43:31 PAGE 5   

             -xC7,0x00,0x00,0x00,
 192          "向",0x04,0x00,0x08,0x40,0x7F,0xE0,0x40,0x40,0x5F,0x40,0x51,0x40,0x51,0x40,0x5F,0x40,0x40,0x40,0x40,0x40,0
             -x41,0xC0,0x00,0x00,
 193          
 194          //"时",
 195          //"针",
 196          };
 197          
 198          uchar gCurRow,gCurCol; // 图形当前行、列存储，行高16点，列宽8点
 199          uchar tCurRow,tCurCol; // 文本当前行、列存储，行高8点 ，列宽8点
 200          uchar ShowModeSW; // 当前显示模式
 201          uint txthome,grhome;
 202          
 203          /******************************************************************************/
 204          uchar fnGetRow();
 205          uchar fnGetCol();
 206          uchar fnST01(); // 状态位STA1,STA0判断（读写指令和读写数据）
 207          uchar fnST2(); // 状态位ST2判断（数据自动读状态）
 208          uchar fnST3(); // 状态位ST3判断（数据自动写状态）
 209          uchar fnST6(); // 状态位ST6判断（屏读/屏拷贝状态）
 210          uchar fnPR1(uchar uCmd,uchar uPar1,uchar uPar2); // 写双参数的指令
 211          uchar fnPR11(uchar uCmd,uchar uPar1); // 写单参数的指令
 212          uchar fnPR12(uchar uCmd); // 写无参数的指令
 213          uchar fnPR13(uchar uData); // 写数据
 214          uchar fnPR2(); // 读数据
 215          void fnSetPos(uchar urow, uchar ucol);	// 设置当前地址
 216          void cursor(uchar uRow, uchar uCol); 	//设置当前显示行、列
 217          void at(unsigned char x,unsigned char y);/*设定文本x,y值*/
 218          void cls();	 // 清屏
 219          char fnLCMInit(); // LCM 初始化
 220          void charout(uchar *str); //ASCII(8*8) 显示函数
 221          uchar dprintf(uchar x,uchar y,char *fmt);// ASCII(8*16) 及 汉字(16*16) 显示函数
 222          void OutToLCD(uchar Dat,uchar x,uchar y);//显示辅助函数 
 223          
 224          void SetShowMode(uchar newShowModeSW);	
 225          void Line( unsigned char x1, unsigned char y1, unsigned char x2, unsigned char y2, bit Mode);
 226          void Pixel(unsigned char PointX,unsigned char PointY, bit Mode);
 227          
 228          uchar fnGetRow(void)
 229          {
 230   1      	return gCurRow;
 231   1      }
 232          
 233          uchar fnGetCol(void)
 234          {
 235   1      	return gCurCol;
 236   1      }
 237          
 238          uchar fnST01(void) // 状态位STA1,STA0判断（读写指令和读写数据）
 239          {
 240   1      	uchar i;
 241   1      	
 242   1      	for(i=10;i>0;i--)
 243   1      	{
 244   2      		if((LCMCW & 0x03) == 0x03)
 245   2      		break;
 246   2      	}
 247   1      	return i; // 若返回零，说明错误
 248   1      }
 249          
 250          uchar fnST2(void) // 状态位ST2判断（数据自动读状态）
 251          {
C51 COMPILER V6.12  SHOWFUN                                                                06/05/2007 15:43:31 PAGE 6   

 252   1      	uchar i;
 253   1      	
 254   1      	for(i=10;i>0;i--)
 255   1      	{
 256   2      		if((LCMCW & 0x04) == 0x04)
 257   2      		break;
 258   2      	}
 259   1      	return i; // 若返回零，说明错误
 260   1      }
 261          
 262          uchar fnST3(void) // 状态位ST3判断（数据自动写状态）
 263          {
 264   1      	uchar i;
 265   1      	
 266   1      	for(i=10;i>0;i--)
 267   1      	{
 268   2      		if((LCMCW & 0x08) == 0x08)
 269   2      		break;
 270   2      	}
 271   1      	return i; // 若返回零，说明错误
 272   1      }
 273          
 274          uchar fnST6(void) // 状态位ST6判断（屏读/屏拷贝状态）
 275          {
 276   1      	uchar i;
 277   1      	
 278   1      	for(i=10;i>0;i--)
 279   1      	{
 280   2      		if((LCMCW & 0x40) == 0x40)
 281   2      		break;
 282   2      	}
 283   1      	return i; // 若返回零，说明错误
 284   1      }
 285          
 286          uchar fnPR1(uchar uCmd,uchar uPar1,uchar uPar2) // 写双参数的指令
 287          {
 288   1      	if(fnST01() == 0)
 289   1      	return 1;
 290   1      	LCMDW = uPar1;
 291   1      	if(fnST01() == 0)
 292   1      	return 2;
 293   1      	LCMDW = uPar2;
 294   1      	if(fnST01() == 0)
 295   1      	return 3;
 296   1      	LCMCW = uCmd;
 297   1      	return 0; // 返回0成功
 298   1      }
 299          
 300          uchar fnPR11(uchar uCmd,uchar uPar1) // 写单参数的指令
 301          {
 302   1      	if(fnST01() == 0)
 303   1      	return 1;
 304   1      	LCMDW = uPar1;
 305   1      	if(fnST01() == 0)
 306   1      	return 2;
 307   1      	LCMCW = uCmd;
 308   1      	return 0; // 返回0成功
 309   1      }
 310          
 311          uchar fnPR12(uchar uCmd) // 写无参数的指令
 312          {
 313   1      	if(fnST01() == 0)
C51 COMPILER V6.12  SHOWFUN                                                                06/05/2007 15:43:31 PAGE 7   

 314   1      	return 1;
 315   1      	LCMCW = uCmd;
 316   1      	return 0; // 返回0成功
 317   1      }
 318          
 319          uchar fnPR13(uchar uData) // 写数据
 320          {
 321   1      	if(fnST3() == 0)
 322   1      	return 1;
 323   1      	LCMDW = uData;
 324   1      	return 0; // 返回0成功
 325   1      }
 326          
 327          uchar fnPR2(void) // 读数据
 328          {
 329   1      	if(fnST01() == 0)
 330   1      	return 1;
 331   1      	return LCMDW;
 332   1      }
 333          
 334          
 335          void fnSetPos(uchar urow, uchar ucol)	//设置当前地址
 336          {
 337   1      	uint iPos;
 338   1      	
 339   1      	iPos = urow * 20 + ucol;
 340   1      	fnPR1(LC_ADD_POS,iPos & 0xFF,iPos / 256);
 341   1      	gCurRow = urow;
 342   1      	gCurCol = ucol;
 343   1      }
 344          
 345          void cursor(uchar uRow, uchar uCol) 	//设置当前显示行、列
 346          {
 347   1      	fnSetPos(uRow * 16, uCol);
 348   1      }
 349          void at(unsigned char x,unsigned char y)/*设定文本x,y值*/
 350          {	
 351   1      	uint iPos; //地址
 352   1      	
 353   1      	iPos = x  + y* 20;
 354   1      	fnPR1(LC_ADD_POS,iPos&0xff,iPos/256);
 355   1      	tCurRow = x;
 356   1      	tCurCol = y;
 357   1      }
 358          
 359          // 清屏
 360          void cls(void)
 361          {
 362   1      	uint i;
 363   1      	
 364   1      	fnPR1(LC_ADD_POS,0x00,0x00); // 置地址指针
 365   1      	fnPR12(LC_AUT_WR); // 自动写
 366   1      	for(i=0;i<0x2000;i++)
 367   1      	{
 368   2      		fnST3();
 369   2      		fnPR13(0x00); // 写数据
 370   2      	}
 371   1      	fnPR12(LC_AUT_OVR); // 自动写结束
 372   1      	fnPR1(LC_ADD_POS,0x00,0x00); // 重置地址指针
 373   1      	gCurRow = 0; // 置地址指针存储变量
 374   1      	gCurCol = 0;
 375   1      }
C51 COMPILER V6.12  SHOWFUN                                                                06/05/2007 15:43:31 PAGE 8   

 376          
 377          // LCM 初始化
 378          char fnLCMInit(void)
 379          {
 380   1      	reset=0;
 381   1      	reset=1;
 382   1      	fnPR1(LC_TXT_STP,0x00,0x00); // 文本显示区首地址
 383   1      	fnPR1(LC_TXT_WID,0x14,0x00); // 文本显示区宽度
 384   1      	fnPR1(LC_GRH_STP,0x00,0x00); // 图形显示区首地址
 385   1      	fnPR1(LC_GRH_WID,0x14,0x00); // 图形显示区宽度
 386   1      	fnPR11(LC_CGR_POS,CGRAMSTART >> 11);
 387   1      	fnPR12(LC_CUR_SHP | 0x01); // 光标形状
 388   1      	fnPR12(LC_MOD_OR); // 显示方式设置
 389   1      	fnPR12(LC_DIS_SW |0x08);
 390   1      	grhome = GRSTART;
 391   1          txthome = TXTSTART;
 392   1      
 393   1      	return 0;
 394   1      }
 395          void charout(uchar *str)
 396          {
 397   1          uchar ch,len,i,uRow,uCol ;
 398   1          len=strlen(str);
 399   1          i=0;
 400   1          uRow = tCurRow;
 401   1          uCol = tCurRow;
 402   1          at(uCol,uRow);
 403   1          while(i<len)
 404   1          {
 405   2              ch=str[i]-0x20;
 406   2              fnPR11(LC_INC_WR,ch);
 407   2              i++;
 408   2          }
 409   1      } 
 410          // ASCII及汉字显示函数
 411          
 412          uchar dprintf(uchar x,uchar y,char *fmt)
 413          {
 414   1      	char c1,c2,cData;
 415   1      	uchar i=0,j,uLen;
 416   1      	uchar k;
 417   1      	
 418   1      	uLen=strlen(fmt);
 419   1      
 420   1      	while(i<uLen)
 421   1      	{
 422   2      		c1 = fmt[i];
 423   2      		c2 = fmt[i+1];
 424   2      		
 425   2      		fnSetPos(y,x/8);
 426   2      		if(c1 >= 0)
 427   2      		{
 428   3      		 // ASCII
 429   3      		    if(c1 < 0x20)
 430   3      		    {
 431   4      		        switch(c1)
 432   4      		        {
 433   5      		            case CR:
 434   5      		            case LF: // 回车或换行
 435   5      		                i++;
 436   5      						x=0;
 437   5      		                if(y < 112)y+=HZ_CHR_HEIGHT;
C51 COMPILER V6.12  SHOWFUN                                                                06/05/2007 15:43:31 PAGE 9   

 438   5      		                continue;
 439   5      		            case BS: // 退格
 440   5      						i++;
 441   5      		                if(y>ASC_CHR_WIDTH)y-=ASC_CHR_WIDTH;
 442   5      		                cData = 0x00;
 443   5      		                break;
 444   5      		        }
 445   4      		    } 
 446   3      		    for(j=0;j<ASC_CHR_HEIGHT;j++)
 447   3      		    {
 448   4      		        
 449   4      		        if(c1 >= 0x1f)
 450   4      		        {
 451   5      				   	cData= ASC_MSK[(c1-0x1f)*ASC_CHR_HEIGHT+j];
 452   5      					fnSetPos(y+j,x/8);
 453   5      					if((x%8)==0)
 454   5      					{
 455   6      						fnPR12(LC_AUT_WR); // 写数据
 456   6      			           	fnPR13(cData);	
 457   6      			        	fnPR12(LC_AUT_OVR);
 458   6      					}
 459   5      					else
 460   5      						OutToLCD(cData,x,y+j);
 461   5      		        }
 462   4      		        fnSetPos(y+j,x/8);
 463   4      		    }
 464   3      		    if(c1 != BS) // 非退格
 465   3      		    x+=ASC_CHR_WIDTH;
 466   3      		}
 467   2      		else
 468   2      		{ // 中文
 469   3      			
 470   3      		    for(j=0;j<sizeof(GB_16)/sizeof(GB_16[0]);j++)
 471   3      		    {
 472   4      		        if(c1 == GB_16[j].Index[0] && c2 == GB_16[j].Index[1])
 473   4      		        break;
 474   4      		    }
 475   3      		    for(k=0;k<HZ_CHR_HEIGHT;k++)
 476   3      		    {
 477   4      				
 478   4      		        fnSetPos(y+k,x/8);
 479   4      		        if(j < sizeof(GB_16)/sizeof(GB_16[0]))
 480   4      		        {
 481   5      					c1=GB_16[j].Msk[k*2];
 482   5      					c2=GB_16[j].Msk[k*2+1];
 483   5      				}
 484   4      				else	   
 485   4      					c1=c2=0;
 486   4      				if((x%8)==0)
 487   4      				{
 488   5      					fnPR12(LC_AUT_WR);
 489   5      					fnPR13(c1);
 490   5      			        fnPR12(LC_AUT_OVR);
 491   5      		        }
 492   4      				else
 493   4      					OutToLCD(c1,x,y+k);
 494   4      				
 495   4      				if(((x+2+HZ_CHR_WIDTH/2)%8)==0)
 496   4      				{
 497   5      					fnPR12(LC_AUT_WR);
 498   5      					fnPR13(c2);
 499   5      					fnPR12(LC_AUT_OVR);
C51 COMPILER V6.12  SHOWFUN                                                                06/05/2007 15:43:31 PAGE 10  

 500   5      		        }
 501   4      				else
 502   4      					OutToLCD(c2,x+2+HZ_CHR_WIDTH/2,y+k);
 503   4      		    }
 504   3      		    x+=HZ_CHR_WIDTH;
 505   3      		    i++;
 506   3      		}  
 507   2      		i++;
 508   2      	}
 509   1      	return uLen;
 510   1      }
 511          void OutToLCD(uchar Dat,uchar x,uchar y) 
 512          {
 513   1      	uchar uData1,uData2,ux,a,b;
 514   1      
 515   1      	a=8-(x%8);b=x%8;
 516   1      	fnSetPos(y,x/8);
 517   1      	fnPR12(LC_AUT_RD); // 读数据
 518   1      	uData1=fnPR2();
 519   1      	uData2=fnPR2();
 520   1      	fnPR12(LC_AUT_OVR);
 521   1      	fnSetPos(y,x/8);
 522   1      	uData1&=~MSK1[a];
 523   1      	ux=Dat&MSK2[a];
 524   1      	ux>>=b;
 525   1      	uData1=uData1|ux;
 526   1      	ux=~MSK2[b];
 527   1      	uData2&=ux;
 528   1      	ux=MSK1[b];
 529   1      	ux=Dat&ux;
 530   1      	ux<<=a;
 531   1      	uData2=uData2|ux;
 532   1      	fnPR12(LC_AUT_WR); // 写数据
 533   1         	fnPR13(uData1);	
 534   1      	fnPR13(uData2);
 535   1      	fnPR12(LC_AUT_OVR);
 536   1      
 537   1      }
 538          void SetShowMode(uchar newShowModeSW)	 //设置为显示模式
 539          {
 540   1      	ShowModeSW=newShowModeSW;
 541   1      	fnPR12(LC_DIS_SW | newShowModeSW);
 542   1      }
 543          
 544          /**********************************
 545          //= 函数原型: Pixel(unsigned char PointX,unsigned char PointY, bit Mode)
 546          //= 功    能: 在指定坐标位置显示一个点
 547          //= 参    数: 坐标,显示点或清除点
 548          //= 返 回 值:
 549          //= 函数性质：私有函数
 550          //= 如果显示屏超过了256*256,请修改这个函数 PointX,PointY的类型
 551          //= Mode 1:显示 0:清除该点
 552          **********************************/
 553          void Pixel(unsigned char PointX,unsigned char PointY, bit Mode)
 554          {
 555   1          unsigned char StartAddr;
 556   1          unsigned char dat;
 557   1          StartAddr=7-(PointX%8);
 558   1          dat=LC_BIT_OP|StartAddr; //生产位操作命令画点的数据
 559   1          if(Mode) dat=dat|0x08;
 560   1      	fnSetPos(PointY,PointX/8);
 561   1      	fnPR12(LC_BIT_OP|dat); // 写数据
C51 COMPILER V6.12  SHOWFUN                                                                06/05/2007 15:43:31 PAGE 11  

 562   1      }
 563          
 564          
 565          /**********************************
 566          //= 函数原型: void line( unsigned char x1, unsigned char y1, unsigned char x2, unsigned char y2, bit Mode)
 567          //= 功    能: 划线函数
 568          //= 参    数: 坐标1,坐标2,显示点或清除点
 569          //= 返 回 值:
 570          //= 函数性质：私有函数
 571          //= 其它:显示点阵不超过255*255
 572          /**********************************/
 573          
 574          void line( unsigned char x1,unsigned char y1, unsigned char x2,unsigned char y2,  bit Mode)
 575          {
 576   1          unsigned char x,y;
 577   1          float k,b;
 578   1          if( abs(y1-y2) <= abs(x1-x2) ) // |k|<=1
 579   1          {
 580   2              k=((float)y2-y1) / ((float)x2-x1) ;
 581   2              b=y1-k*x1;
 582   2              if( x1 <= x2 )
 583   2              {
 584   3                  for(x=x1;x<=x2;x++)
 585   3                  {
 586   4                      y=(uchar)(k*x+b);
 587   4                      Pixel(x, y, Mode);
 588   4                  }
 589   3              }
 590   2              else
 591   2              {
 592   3                  for(x=x2;x<=x1;x++)
 593   3                  {
 594   4                      y=(uchar)(k*x+b);
 595   4                      Pixel(x, y, Mode);
 596   4                  }
 597   3              }
 598   2          }
 599   1          else // abs(y1-y2) > abs(x1-x2) |K|>1
 600   1          {
 601   2              k=((float)x2-x1) / ((float)y2-y1) ;
 602   2              b=x1-k*y1;
 603   2              if( y1 <= y2 )
 604   2              {
 605   3                  for(y=y1;y<=y2;y++)
 606   3                  {
 607   4                      x=(uchar)(k*y+b);
 608   4                      Pixel( x , y,Mode );
 609   4                  }
 610   3              }
 611   2              else
 612   2              {
 613   3                  for(y=y2;y<=y1;y++)
 614   3                  {
 615   4                      x=(uchar)(k*y+b);
 616   4                      Pixel( x , y,Mode );
 617   4                  }
 618   3              }
 619   2          }
 620   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V6.12  SHOWFUN                                                                06/05/2007 15:43:31 PAGE 12  

   CODE SIZE        =   1719    ----
   CONSTANT SIZE    =   2244    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9      43
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
